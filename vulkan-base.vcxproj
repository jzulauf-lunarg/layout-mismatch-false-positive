<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{396CA799-5466-40A8-A4A1-62B9ECC8F5B8}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>vulkan-base</RootNamespace>
    <ProjectName>vulkan-base</ProjectName>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)build\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build\$(Configuration)\intermediate\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)build\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build\$(Configuration)\intermediate\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir)third-party;$(ProjectDir)third-party\imgui</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <PreprocessorDefinitions>_DEBUG;_GLFW_WIN32;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Manifest>
      <AdditionalManifestFiles>DeclareDPIAware.manifest</AdditionalManifestFiles>
    </Manifest>
    <CustomBuild>
      <Command>$(VULKAN_SDK)\Bin\glslangValidator %(FullPath) -V --target-env vulkan1.1 -o $(ProjectDir)data\spirv\%(Filename).spv &amp;&amp; $(VULKAN_SDK)\Bin\spirv-opt $(ProjectDir)data\spirv\%(Filename).spv -O --strip-debug -o $(ProjectDir)data\spirv\%(Filename).spv</Command>
      <Outputs>$(ProjectDir)data\spirv\%(Filename).spv</Outputs>
      <AdditionalInputs>$(ProjectDir)src\shaders\common.glsl</AdditionalInputs>
      <LinkObjects>false</LinkObjects>
      <Message>
      </Message>
    </CustomBuild>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <AdditionalIncludeDirectories>$(ProjectDir)third-party;$(ProjectDir)third-party\imgui</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <PreprocessorDefinitions>NDEBUG;_GLFW_WIN32;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Manifest>
      <AdditionalManifestFiles>DeclareDPIAware.manifest</AdditionalManifestFiles>
    </Manifest>
    <CustomBuild>
      <Command>$(VULKAN_SDK)\Bin\glslangValidator %(FullPath) -V --target-env vulkan1.1 -o $(ProjectDir)data\spirv\%(Filename).spv &amp;&amp; $(VULKAN_SDK)\Bin\spirv-opt $(ProjectDir)data\spirv\%(Filename).spv -O --strip-debug -o $(ProjectDir)data\spirv\%(Filename).spv</Command>
      <Outputs>$(ProjectDir)data\spirv\%(Filename).spv</Outputs>
      <AdditionalInputs>$(ProjectDir)src\shaders\rt_utils.glsl;$(ProjectDir)src\shaders\common.glsl</AdditionalInputs>
      <LinkObjects>false</LinkObjects>
      <Message>
      </Message>
    </CustomBuild>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="src\common.cpp" />
    <ClCompile Include="src\copy_to_swapchain.cpp" />
    <ClCompile Include="src\mesh.cpp" />
    <ClCompile Include="src\utils.cpp" />
    <ClCompile Include="src\matrix.cpp" />
    <ClCompile Include="src\vk.cpp" />
    <ClCompile Include="src\main.cpp" />
    <ClCompile Include="src\demo.cpp" />
    <ClCompile Include="src\win32.cpp" />
    <ClCompile Include="third-party\glfw\context.c" />
    <ClCompile Include="third-party\glfw\egl_context.c" />
    <ClCompile Include="third-party\glfw\init.c" />
    <ClCompile Include="third-party\glfw\input.c" />
    <ClCompile Include="third-party\glfw\monitor.c" />
    <ClCompile Include="third-party\glfw\osmesa_context.c" />
    <ClCompile Include="third-party\glfw\vulkan.c" />
    <ClCompile Include="third-party\glfw\wgl_context.c" />
    <ClCompile Include="third-party\glfw\win32_init.c" />
    <ClCompile Include="third-party\glfw\win32_joystick.c" />
    <ClCompile Include="third-party\glfw\win32_monitor.c" />
    <ClCompile Include="third-party\glfw\win32_thread.c" />
    <ClCompile Include="third-party\glfw\win32_time.c" />
    <ClCompile Include="third-party\glfw\win32_window.c" />
    <ClCompile Include="third-party\glfw\window.c" />
    <ClCompile Include="third-party\imgui\imgui.cpp" />
    <ClCompile Include="third-party\imgui\imgui_demo.cpp" />
    <ClCompile Include="third-party\imgui\imgui_draw.cpp" />
    <ClCompile Include="third-party\imgui\imgui_widgets.cpp" />
    <ClCompile Include="third-party\imgui\impl\imgui_impl_glfw.cpp" />
    <ClCompile Include="third-party\imgui\impl\imgui_impl_vulkan.cpp" />
    <ClCompile Include="third-party\volk\volk.c">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">VK_USE_PLATFORM_WIN32_KHR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">VK_USE_PLATFORM_WIN32_KHR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\common.h" />
    <ClInclude Include="src\copy_to_swapchain.h" />
    <ClInclude Include="src\mesh.h" />
    <ClInclude Include="src\platform.h" />
    <ClInclude Include="src\utils.h" />
    <ClInclude Include="src\matrix.h" />
    <ClInclude Include="src\vector.h" />
    <ClInclude Include="src\vk.h" />
    <ClInclude Include="src\demo.h" />
    <ClInclude Include="third-party\glfw\egl_context.h" />
    <ClInclude Include="third-party\glfw\glfw3.h" />
    <ClInclude Include="third-party\glfw\glfw3native.h" />
    <ClInclude Include="third-party\glfw\internal.h" />
    <ClInclude Include="third-party\glfw\mappings.h" />
    <ClInclude Include="third-party\glfw\osmesa_context.h" />
    <ClInclude Include="third-party\glfw\wgl_context.h" />
    <ClInclude Include="third-party\glfw\win32_joystick.h" />
    <ClInclude Include="third-party\glfw\win32_platform.h" />
    <ClInclude Include="third-party\imgui\imconfig.h" />
    <ClInclude Include="third-party\imgui\imgui.h" />
    <ClInclude Include="third-party\imgui\imgui_internal.h" />
    <ClInclude Include="third-party\imgui\impl\imgui_impl_glfw.h" />
    <ClInclude Include="third-party\imgui\impl\imgui_impl_vulkan.h" />
    <ClInclude Include="third-party\stb_image.h" />
    <ClInclude Include="third-party\tiny_obj_loader.h" />
    <ClInclude Include="third-party\vk_enum_string_helper.h" />
    <ClInclude Include="third-party\vk_mem_alloc.h" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="src\shaders\mesh.frag.glsl">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="src\shaders\mesh.vert.glsl">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="src\shaders\copy_to_swapchain.comp.glsl">
      <FileType>Document</FileType>
    </CustomBuild>
    <None Include="src\shaders\common.glsl" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>